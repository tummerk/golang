// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: schedule.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	ScheduleID    int64                  `protobuf:"varint,2,opt,name=scheduleID,proto3" json:"scheduleID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduleRequest) Reset() {
	*x = GetScheduleRequest{}
	mi := &file_schedule_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduleRequest) ProtoMessage() {}

func (x *GetScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetScheduleRequest) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{0}
}

func (x *GetScheduleRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetScheduleRequest) GetScheduleID() int64 {
	if x != nil {
		return x.ScheduleID
	}
	return 0
}

type Schedule struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MedicamentName string                 `protobuf:"bytes,1,opt,name=medicamentName,proto3" json:"medicamentName,omitempty"`
	IsActual       bool                   `protobuf:"varint,2,opt,name=isActual,proto3" json:"isActual,omitempty"`
	Takings        []string               `protobuf:"bytes,3,rep,name=takings,proto3" json:"takings,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_schedule_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{1}
}

func (x *Schedule) GetMedicamentName() string {
	if x != nil {
		return x.MedicamentName
	}
	return ""
}

func (x *Schedule) GetIsActual() bool {
	if x != nil {
		return x.IsActual
	}
	return false
}

func (x *Schedule) GetTakings() []string {
	if x != nil {
		return x.Takings
	}
	return nil
}

type UserID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserID) Reset() {
	*x = UserID{}
	mi := &file_schedule_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{2}
}

func (x *UserID) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type Schedules struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CurrentSchedules []*Schedule            `protobuf:"bytes,1,rep,name=currentSchedules,proto3" json:"currentSchedules,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Schedules) Reset() {
	*x = Schedules{}
	mi := &file_schedule_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedules) ProtoMessage() {}

func (x *Schedules) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedules.ProtoReflect.Descriptor instead.
func (*Schedules) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{3}
}

func (x *Schedules) GetCurrentSchedules() []*Schedule {
	if x != nil {
		return x.CurrentSchedules
	}
	return nil
}

type CreateScheduleRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MedicamentName   string                 `protobuf:"bytes,1,opt,name=medicamentName,proto3" json:"medicamentName,omitempty"`
	UserId           int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	ReceptionsPerDay int64                  `protobuf:"varint,3,opt,name=receptionsPerDay,proto3" json:"receptionsPerDay,omitempty"`
	Duration         int64                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateScheduleRequest) Reset() {
	*x = CreateScheduleRequest{}
	mi := &file_schedule_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduleRequest) ProtoMessage() {}

func (x *CreateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{4}
}

func (x *CreateScheduleRequest) GetMedicamentName() string {
	if x != nil {
		return x.MedicamentName
	}
	return ""
}

func (x *CreateScheduleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateScheduleRequest) GetReceptionsPerDay() int64 {
	if x != nil {
		return x.ReceptionsPerDay
	}
	return 0
}

func (x *CreateScheduleRequest) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ScheduleID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScheduleID    int64                  `protobuf:"varint,1,opt,name=scheduleID,proto3" json:"scheduleID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleID) Reset() {
	*x = ScheduleID{}
	mi := &file_schedule_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleID) ProtoMessage() {}

func (x *ScheduleID) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleID.ProtoReflect.Descriptor instead.
func (*ScheduleID) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{5}
}

func (x *ScheduleID) GetScheduleID() int64 {
	if x != nil {
		return x.ScheduleID
	}
	return 0
}

type Taking struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Time          string                 `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Taking) Reset() {
	*x = Taking{}
	mi := &file_schedule_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Taking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taking) ProtoMessage() {}

func (x *Taking) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taking.ProtoReflect.Descriptor instead.
func (*Taking) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{6}
}

func (x *Taking) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Taking) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type Takings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Takings       []*Taking              `protobuf:"bytes,1,rep,name=takings,proto3" json:"takings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Takings) Reset() {
	*x = Takings{}
	mi := &file_schedule_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Takings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Takings) ProtoMessage() {}

func (x *Takings) ProtoReflect() protoreflect.Message {
	mi := &file_schedule_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Takings.ProtoReflect.Descriptor instead.
func (*Takings) Descriptor() ([]byte, []int) {
	return file_schedule_proto_rawDescGZIP(), []int{7}
}

func (x *Takings) GetTakings() []*Taking {
	if x != nil {
		return x.Takings
	}
	return nil
}

var File_schedule_proto protoreflect.FileDescriptor

const file_schedule_proto_rawDesc = "" +
	"\n" +
	"\x0eschedule.proto\x12\bSchedule\"L\n" +
	"\x12GetScheduleRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\x12\x1e\n" +
	"\n" +
	"scheduleID\x18\x02 \x01(\x03R\n" +
	"scheduleID\"h\n" +
	"\bSchedule\x12&\n" +
	"\x0emedicamentName\x18\x01 \x01(\tR\x0emedicamentName\x12\x1a\n" +
	"\bisActual\x18\x02 \x01(\bR\bisActual\x12\x18\n" +
	"\atakings\x18\x03 \x03(\tR\atakings\" \n" +
	"\x06UserID\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\"K\n" +
	"\tSchedules\x12>\n" +
	"\x10currentSchedules\x18\x01 \x03(\v2\x12.Schedule.ScheduleR\x10currentSchedules\"\x9f\x01\n" +
	"\x15CreateScheduleRequest\x12&\n" +
	"\x0emedicamentName\x18\x01 \x01(\tR\x0emedicamentName\x12\x16\n" +
	"\x06userId\x18\x02 \x01(\x03R\x06userId\x12*\n" +
	"\x10receptionsPerDay\x18\x03 \x01(\x03R\x10receptionsPerDay\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x03R\bduration\",\n" +
	"\n" +
	"ScheduleID\x12\x1e\n" +
	"\n" +
	"scheduleID\x18\x01 \x01(\x03R\n" +
	"scheduleID\"0\n" +
	"\x06Taking\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04time\x18\x02 \x01(\tR\x04time\"5\n" +
	"\aTakings\x12*\n" +
	"\atakings\x18\x01 \x03(\v2\x10.Schedule.TakingR\atakings2\x86\x02\n" +
	"\x0fScheduleService\x12?\n" +
	"\vGetSchedule\x12\x1c.Schedule.GetScheduleRequest\x1a\x12.Schedule.Schedule\x125\n" +
	"\fGetSchedules\x12\x10.Schedule.UserID\x1a\x13.Schedule.Schedules\x12G\n" +
	"\x0eCreateSchedule\x12\x1f.Schedule.CreateScheduleRequest\x1a\x14.Schedule.ScheduleID\x122\n" +
	"\vNextTakings\x12\x10.Schedule.UserID\x1a\x11.Schedule.TakingsB\bZ\x06.;grpcb\x06proto3"

var (
	file_schedule_proto_rawDescOnce sync.Once
	file_schedule_proto_rawDescData []byte
)

func file_schedule_proto_rawDescGZIP() []byte {
	file_schedule_proto_rawDescOnce.Do(func() {
		file_schedule_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schedule_proto_rawDesc), len(file_schedule_proto_rawDesc)))
	})
	return file_schedule_proto_rawDescData
}

var file_schedule_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_schedule_proto_goTypes = []any{
	(*GetScheduleRequest)(nil),    // 0: Schedule.GetScheduleRequest
	(*Schedule)(nil),              // 1: Schedule.Schedule
	(*UserID)(nil),                // 2: Schedule.UserID
	(*Schedules)(nil),             // 3: Schedule.Schedules
	(*CreateScheduleRequest)(nil), // 4: Schedule.CreateScheduleRequest
	(*ScheduleID)(nil),            // 5: Schedule.ScheduleID
	(*Taking)(nil),                // 6: Schedule.Taking
	(*Takings)(nil),               // 7: Schedule.Takings
}
var file_schedule_proto_depIdxs = []int32{
	1, // 0: Schedule.Schedules.currentSchedules:type_name -> Schedule.Schedule
	6, // 1: Schedule.Takings.takings:type_name -> Schedule.Taking
	0, // 2: Schedule.ScheduleService.GetSchedule:input_type -> Schedule.GetScheduleRequest
	2, // 3: Schedule.ScheduleService.GetSchedules:input_type -> Schedule.UserID
	4, // 4: Schedule.ScheduleService.CreateSchedule:input_type -> Schedule.CreateScheduleRequest
	2, // 5: Schedule.ScheduleService.NextTakings:input_type -> Schedule.UserID
	1, // 6: Schedule.ScheduleService.GetSchedule:output_type -> Schedule.Schedule
	3, // 7: Schedule.ScheduleService.GetSchedules:output_type -> Schedule.Schedules
	5, // 8: Schedule.ScheduleService.CreateSchedule:output_type -> Schedule.ScheduleID
	7, // 9: Schedule.ScheduleService.NextTakings:output_type -> Schedule.Takings
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_schedule_proto_init() }
func file_schedule_proto_init() {
	if File_schedule_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schedule_proto_rawDesc), len(file_schedule_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schedule_proto_goTypes,
		DependencyIndexes: file_schedule_proto_depIdxs,
		MessageInfos:      file_schedule_proto_msgTypes,
	}.Build()
	File_schedule_proto = out.File
	file_schedule_proto_goTypes = nil
	file_schedule_proto_depIdxs = nil
}
